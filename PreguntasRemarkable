##1. Define "Ciclo de vida del software".
##Ciclo de vida del Software
El término ciclo de vida del software describe el desarrollo de software, desde la fase inicial hasta la fase final. El propósito de este programa es definir las distintas fases intermedias que se requieren para validar el desarrollo de la aplicación, es decir, para garantizar que el software cumpla los requisitos para la aplicación y verificación de los procedimientos de desarrollo: se asegura de que los métodos utilizados son apropiados.
##2. Nombra las fases principales del desarrollo de software y explica brevemente que se hace en cada una de ellas.
#Fases del desarrollo de software

**1. Fase de inicio de un proyecto**
Será la base de nuestro proyectos. Los cimientos que lo sustenten. En esta fase definiremos el alcanza y la descripción del objetivo que perseguimos para transmitir de manera fácil y directa la información necesaria a todo el equipo para poder empezar a construir.
 **2. Fase de diseño de un proyecto o planificación**
 Sabemos el objetivo del proyecto, su alcance y el equipo de trabajo con el contamos. Es momento de definir las actividades o acciones con las que podremos llegar a cumplirlo. En esta fase vamos definiendo los recursos que necesitamos y tenemos disponibles, así como los plazos.

**3. Fase de ejecución o desarrollo**
En la fase de ejecución, se empiezan a desarrollar y validar sub-tareas y actividades, cumpliendo así con los diferentes objetivos dentro del proyecto.

**4. Fase de análisis de un proyecto**
Resaltamos esta fase de análisis y seguimiento de manera individual, pero siempre concibiéndola como parte clave de la etapa de ejecución de un proyecto. El seguimiento continuo forma parte del desarrollo del proyecto, y además de la planificación.

**5. Fase de evaluación de un proyecto y lecciones aprendidas**
Cerramos el proyecto en el momento que obtengamos el objetivo principal, definido en la fase de inicio. 

##3. Explica brevemente en qué consiste el modelo en cascada cuando hablamos de desarrollo de software.
Es el enfoque metodológico que ordena rigurosamente las etapas del proceso para el desarrollo de software, de tal forma que el inicio de cada etapa debe esperar a la finalización de la etapa anterior.

##4. Ventajas e inconvenientes del modelo en cascada.
**Ventajas**
- Realiza un buen funcionamiento en equipos débiles y productos maduros, por lo que se requiere de menos capital y herramientas para hacerlo funcionar de manera óptima.
- Es un modelo fácil de implementar y entender.
- Está orientado a documentos.
- Es un modelo conocido y utilizado con frecuencia.
- Promueve una metodología de trabajo efectiva: Definir antes que diseñar, diseñar antes que codificar.
**Desventajas**
- En la vida real, un proyecto rara vez sigue una secuencia lineal, esto crea una mala implementación del modelo, lo cual hace que lo lleve al fracaso.
- El proceso de creación del software tarda mucho tiempo ya que debe pasar por el proceso de prueba y hasta que el software no esté completo no se opera. Esto es la base para que funcione bien.
- Cualquier error de diseño detectado en la etapa de prueba conduce necesariamente al rediseño y nueva programación del código afectado, aumentando los costos del desarrollo.
- Una etapa determinada del proyecto no se puede llevar a cabo a menos de que se haya culminado la etapa anterior.

##5. ¿Qué se entiende por verificación? ¿Y por validación?
La validación es una prueba o un control que hacemos probando el producto tal y como lo haría el cliente, por eso la flecha de validación se dirige hacia las necesidades del cliente. 
La verificación es un control más específico y normalmente previo a la validación. En la verificación comprobamos la conformidad de uno o más requisitos del producto. El cumplimiento de todos estos requisitos hará posible que el producto pueda utilizarse tal y como se ha diseñado, por eso la flecha del esquema se dirige a las especificaciones. 

##6. Explica como funciona el modelo de desarrollo mediante creación de prototipos.
El modelo de prototipos permite que todo el sistema, o algunos de sus partes, se construyan rápidamente para comprender con facilidad y aclarar ciertos aspectos en los que se aseguren que el desarrollador, el usuario, el cliente estén de acuerdo en lo que se necesita así como también la solución que se propone para dicha necesidad y de esta forma minimizar el riesgo y la incertidumbre en el desarrollo

##7. Explica como funciona el modelo espiral cuando se aplica al desarrollo orientado a objetos.
Los principios básicos son:
- La atención se centra en la evaluación y reducción del riesgo del proyecto dividiendo el proyecto en segmentos más pequeños y proporcionar más facilidad de cambio durante el proceso de desarrollo, así como ofrecer la oportunidad de evaluar los riesgos y con un peso de la consideración de la continuación del proyecto durante todo el ciclo de vida.
- Cada viaje alrededor de la espiral atraviesa cuatro cuadrantes básicos: determinar objetivos, alternativas, y desencadenantes de la iteración; Evaluar alternativas; Identificar y resolver los riesgos; desarrollar y verificar los resultados de la iteración, y plan de la próxima iteración. 
- Cada ciclo comienza con la identificación de los interesados y sus condiciones de ganancia, y termina con la revisión y examinación

##8.¿Qué cuatro principios rigen el desarrollo ágil expresados en el Manifiesto Ágil?
1- Valoramos más a los individuos y su interacción que a los procesos y las herramientas.
2- Valorar más el software funcionando que la documentación exhaustiva
3- Valorar más la colaboración con el cliente que la negociación contractual
4- Valorar más la respuesta ante el cambio que seguir un plan

##9. ¿Qué es una historia de usuario?
Una historia de usuario es una representación de un requisito escrito en una o dos frases utilizando el lenguaje común del usuario. Las historias de usuario son utilizadas en las metodologías de desarrollo ágiles para la especificación de requisitos.

##10. Haz un resumen sobre que se entiende por Lean software y qué principios lo rigen. 
Lean Development (LD) es el método menos divulgado entre los conocidamente importantes. Se inspira en el éxito del proceso industrial Lean Manufacturing, bien conocido en la producción automotriz y en manufactura desde la década de 1980.
Los principios son:
• Optimizar el todo
• Eliminar desperdicios
• Calidad en la construcción
• Aprender constantemente
• Entregar rápido
• Involucrar a todo el mundo
• Seguir mejorando

##11. KANBAN. Estudia las ventajas e inconvenientes de tener una pizarra web digital para la metodología Kanban.
**Ventajas**

